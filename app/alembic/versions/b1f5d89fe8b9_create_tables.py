"""create tables

Revision ID: b1f5d89fe8b9
Revises: 
Create Date: 2025-05-19 15:34:00.370734

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b1f5d89fe8b9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tb_type',
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('type_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('type_id'),
    sa.UniqueConstraint('type_name')
    )
    op.create_index(op.f('ix_tb_type_type_id'), 'tb_type', ['type_id'], unique=False)
    op.create_table('tb_user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(length=255), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('phone', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_email')
    )
    op.create_index(op.f('ix_tb_user_user_id'), 'tb_user', ['user_id'], unique=False)
    op.create_table('tb_category',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(length=100), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['type_id'], ['tb_type.type_id'], ),
    sa.PrimaryKeyConstraint('category_id'),
    sa.UniqueConstraint('category_name')
    )
    op.create_index(op.f('ix_tb_category_category_id'), 'tb_category', ['category_id'], unique=False)
    op.create_table('tb_order',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('customer_name', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_budget', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['tb_user.user_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_index(op.f('ix_tb_order_order_id'), 'tb_order', ['order_id'], unique=False)
    op.create_table('tb_product',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('product_type', sa.String(length=50), nullable=True),
    sa.Column('product_name', sa.String(length=255), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('sku_partnumber', sa.String(length=100), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('maximum_discount', sa.Float(), nullable=True),
    sa.Column('maximun_discount_price', sa.Float(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(length=50), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['tb_category.category_id'], ),
    sa.PrimaryKeyConstraint('product_id'),
    sa.UniqueConstraint('product_name')
    )
    op.create_index(op.f('ix_tb_product_product_id'), 'tb_product', ['product_id'], unique=False)
    op.create_table('tb_order_details',
    sa.Column('order_details_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('discount_percent', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['tb_order.order_id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['tb_product.product_id'], ),
    sa.PrimaryKeyConstraint('order_details_id')
    )
    op.create_index(op.f('ix_tb_order_details_order_details_id'), 'tb_order_details', ['order_details_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tb_order_details_order_details_id'), table_name='tb_order_details')
    op.drop_table('tb_order_details')
    op.drop_index(op.f('ix_tb_product_product_id'), table_name='tb_product')
    op.drop_table('tb_product')
    op.drop_index(op.f('ix_tb_order_order_id'), table_name='tb_order')
    op.drop_table('tb_order')
    op.drop_index(op.f('ix_tb_category_category_id'), table_name='tb_category')
    op.drop_table('tb_category')
    op.drop_index(op.f('ix_tb_user_user_id'), table_name='tb_user')
    op.drop_table('tb_user')
    op.drop_index(op.f('ix_tb_type_type_id'), table_name='tb_type')
    op.drop_table('tb_type')
    # ### end Alembic commands ###
